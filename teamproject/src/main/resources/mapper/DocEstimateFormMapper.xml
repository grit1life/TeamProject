<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ksmart.mapper.DocEstimateFormMapper">
	<resultMap type="DocEstimateForm" id="estimateResultMap">
		<result property="estimateCode" column="estimate_code"/>
		<result property="estimateNo" column="estimate_no"/>
		<result property="customerId" column="customer_id"/>
		<result property="goodsCode" column="goods_code"/>
		<result property="setCode" column="set_code"/>
		<result property="tradingCount" column="trading_count"/>
		<result property="rentalFromDate" column="rental_from_date"/>
		<result property="rentalToDate" column="rental_to_date"/>
		<result property="rentalPeriod" column="rental_period"/>
		<result property="saleCode" column="sale_code"/>
		<result property="deliveryTel" column="delivery_tel"/>
		<result property="estimatesExpirationDate" column="estimates_expiration_date"/>
		<result property="inputStaffCode" column="input_staff_code"/>
		<result property="inputDate" column="input_date"/>
		<result property="estimatesIsend" column="estimates_isend"/>
		<result property="estimatesNote" column="estimates_note"/>
		<result property="customerName" column="customer_name"/>
		<result property="customerAddress" column="customer_address"/>
		<result property="customerAddress2" column="customer_address2"/>
		<result property="customerCompanyName" column="customer_company_name"/>
		<result property="goodsName" column="goods_name"/>
		<result property="setName" column="set_name"/>
		<result property="customerCall" column="customer_call"/>
		<result property="setGoodsName" column="setGoodsName"/>
		<result property="setDayPrice" column="set_day_price"/>
		<result property="rentalDayPrice" column="rental_day_price"/>
		<result property="setGoodsCount" column="set_goods_count"/>
		<result property="staffName" column="staff_name"/>
	</resultMap>
	<select id="getEstimateList" parameterType="int" resultMap="estimateResultMap">
		SELECT 
			*
			,SUM(DC.trading_total) AS tradingTotal
			,COUNT(DC.estimate_code) AS count
			,C.customer_name
			,C.customer_call
			,C.customer_address
			,C.customer_address2
			,CC.customer_company_name
			,G.goods_name
			,PS.set_name
			,S.staff_name
		FROM
			doc_estimate AS DC
		INNER JOIN
			customer AS C
			ON
			DC.customer_id = C.customer_id
		LEFT JOIN
			customer_company AS CC
			ON
			C.customer_id = CC.customer_id
		LEFT JOIN
			goods AS G
			ON 
			DC.goods_code = G.goods_code
		LEFT JOIN 
			price_set AS PS
			ON 
			DC.set_code = PS.set_code
		LEFT JOIN
			staff AS S
			ON
			S.staff_code = DC.input_staff_code
		GROUP BY
			DC.estimate_code
		ORDER BY
			DC.estimate_code DESC
		LIMIT #{column}, 10
	</select>
	<select id="getEstimateSearchList" parameterType="DocEstimateForm" resultMap="estimateResultMap">
		SELECT 
			*
			,SUM(DC.trading_total) AS tradingTotal
			,COUNT(DC.estimate_code) AS count
			,C.customer_name
			,C.customer_call
			,C.customer_address
			,C.customer_address2
			,CC.customer_company_name
			,G.goods_name
			,PS.set_name
			,S.staff_name
		FROM
			doc_estimate AS DC
		INNER JOIN
			customer AS C
			ON
			DC.customer_id = C.customer_id
		LEFT JOIN
			customer_company AS CC
			ON
			C.customer_id = CC.customer_id
		LEFT JOIN
			goods AS G
			ON 
			DC.goods_code = G.goods_code
		LEFT JOIN 
			price_set AS PS
			ON 
			DC.set_code = PS.set_code
		LEFT JOIN
			staff AS S
			ON
			S.staff_code = DC.input_staff_code
		WHERE 
			TRUE
			<if test="customerName neq null and customerName neq ''.toString()">
				AND C.customer_name LIKE CONCAT('%',#{customerName},'%')
			</if>
			<if test="staffName neq null and staffName neq ''.toString()">
				AND S.staff_name = #{staffName}
			</if>
			<if test="customerCall neq null and customerCall neq ''.toString()">
				AND C.customer_call =#{customerCall}
			</if>
			<if test="setName neq null and setName neq ''.toString()">
				AND PS.set_name = #{setName}
			</if>
			<if test="goodsName neq null and goodsName neq ''.toString()">
				AND G.goods_name = #{goodsName}
			</if>
			<if test="rentalFromDate neq null and rentalFromDate neq ''.toString()">
				AND DC.rental_from_date &gt;= #{rentalFromDate}
			</if>
			<if test="rentalToDate neq null and rentalToDate neq ''.toString()">
				AND DC.rental_to_date &lt;= #{rentalToDate}
			</if>
		GROUP BY
			DC.estimate_code
		ORDER BY
			DC.estimate_code DESC
		LIMIT #{column}, 10
	</select>
	<select id="getEstimateSearchListCnt" resultType="int">
	
		SELECT
			COUNT(SQ.CNT)
		FROM
		(
		SELECT 
				COUNT(1) AS CNT
		FROM
			doc_estimate AS DC
		INNER JOIN
			customer AS C
			ON
			DC.customer_id = C.customer_id
		LEFT JOIN
			customer_company AS CC
			ON
			C.customer_id = CC.customer_id
		LEFT JOIN
			goods AS G
			ON 
			DC.goods_code = G.goods_code
		LEFT JOIN 
			price_set AS PS
			ON 
			DC.set_code = PS.set_code
		LEFT JOIN
			staff AS S
			ON
			S.staff_code = DC.input_staff_code
		WHERE 
			TRUE
			<if test="customerName neq null and customerName neq ''.toString()">
				AND C.customer_name LIKE CONCAT('%',#{customerName},'%')
			</if>
			<if test="staffName neq null and staffName neq ''.toString()">
				AND staff_name = #{staffName}
			</if>
			<if test="customerCall neq null and customerCall neq ''.toString()">
				AND customer_call =#{customerCall}
			</if>
			<if test="setName neq null and setName neq ''.toString()">
				AND set_name = #{setName}
			</if>
			<if test="goodsName neq null and goodsName neq ''.toString()">
				AND goods_name = #{goodsName}
			</if>
			<if test="rentalFromDate neq null and rentalFromDate neq ''.toString()">
				AND DC.rental_from_date &gt;= #{rentalFromDate}
			</if>
			<if test="rentalToDate neq null and rentalToDate neq ''.toString()">
				AND DC.rental_to_date &lt;= #{rentalToDate}
			</if>
		GROUP BY
			DC.estimate_code
		) AS SQ
	</select>
	<select id="getEstimateListCnt" resultType="int">
		SELECT
			COUNT(SQ.CNT)
		FROM
		(
			SELECT 
				COUNT(1) AS CNT
			FROM
				doc_estimate AS DC
			INNER JOIN
				customer AS C
				ON
				DC.customer_id = C.customer_id
			LEFT JOIN
				customer_company AS CC
				ON
				C.customer_id = CC.customer_id
			LEFT JOIN
				goods AS G
				ON 
				DC.goods_code = G.goods_code
			LEFT JOIN 
				price_set AS PS
				ON 
				DC.set_code = PS.set_code
			GROUP BY
				DC.estimate_code
		) AS SQ
	</select>
	
	<select id="getCusEstimateList" parameterType="String" resultMap="estimateResultMap">
	SELECT 
			DC.estimate_code
			,DC.estimate_no
			,DC.customer_id
			,DC.goods_code
			,DC.set_code
			,DC.trading_count
			,DC.rental_from_date
			,DC.rental_to_date
			,DC.rental_period
			,DC.sale_code
			,SUM(DC.trading_total) AS tradingTotal
			,COUNT(DC.estimate_code) AS count
			,DC.estimates_expiration_date
			,DC.input_staff_code
			,DC.input_date
			,DC.estimates_isend
			,DC.estimates_note
			,DC.grade_name
			,C.customer_name
			,C.customer_call
			,C.customer_address
			,C.customer_address2
			,CC.customer_company_name
			,G.goods_name
			,PS.set_name
		FROM
			doc_estimate AS DC
		INNER JOIN
			customer AS C
			ON
			DC.customer_id = C.customer_id
		LEFT JOIN
			customer_company AS CC
			ON
			C.customer_id = CC.customer_id
		LEFT JOIN
			goods AS G
			ON 
			DC.goods_code = G.goods_code
		LEFT JOIN 
			price_set AS PS
			ON 
			DC.set_code = PS.set_code
		WHERE
			customer_id = #{cId};
		GROUP BY
			DC.estimate_code
		ORDER BY
			DC.estimate_code DESC
	</select>
	<!-- <select id="getAjaxFormList" parameterType="String" resultMap="estimateResultMap">
				SELECT 
			DC.estimate_code
			,DC.estimate_no
			,DC.customer_id
			,DC.goods_code
			,DC.set_code
			,DC.trading_count
			,DC.trading_total AS tradingTotal
			,DC.rental_from_date
			,DC.rental_to_date
			,DC.rental_period
			,DC.sale_code
			,DC.estimates_expiration_date
			,DC.input_staff_code
			,DC.input_date
			,DC.estimates_isend
			,DC.estimates_note
			,DC.grade_name
			,C.customer_name
			,C.customer_call
			,C.customer_address
			,C.customer_address2
			,CC.customer_company_name
			,G.goods_name
			,PS.set_name
		FROM
			doc_estimate AS DC
		INNER JOIN
			customer AS C
			ON
			DC.customer_id = C.customer_id
		LEFT JOIN
			customer_company AS CC
			ON
			C.customer_id = CC.customer_id
		LEFT JOIN
			goods AS G
			ON 
			DC.goods_code = G.goods_code
		LEFT JOIN 
			price_set AS PS
			ON 
			DC.set_code = PS.set_code
		WHERE
			DC.estimate_code = #{estimateCode};
	</select> -->
	<select id="getEstimateForm" parameterType="String" resultMap="estimateResultMap">
		SELECT 
			DC.estimate_code
			,DC.estimate_no
			,DC.customer_id
			,DC.goods_code
			,DC.set_code
			,DC.trading_count
			,DC.trading_total AS tradingTotal
			,DC.rental_from_date
			,DC.rental_to_date
			,DC.rental_period
			,DC.sale_code
			,DC.estimates_expiration_date
			,DC.input_staff_code
			,DC.input_date
			,DC.estimates_isend
			,DC.estimates_note
			,DC.grade_name
			,C.customer_name
			,C.customer_call
			,C.customer_address
			,C.customer_address2
			,CC.customer_company_name
			,G.goods_name
			,PS.set_name
			,PS.set_day_price	<!-- 세트가격 -->
			,PG.rental_day_price <!-- 단품 가격 -->
			,GFSG.goods_name AS setGoodsName
			,SG.set_goods_count
		FROM
			doc_estimate AS DC
		INNER JOIN
			customer AS C
			ON
			DC.customer_id = C.customer_id
		LEFT JOIN
			customer_company AS CC
			ON
			C.customer_id = CC.customer_id
		LEFT JOIN
			goods AS G
			ON 
			DC.goods_code = G.goods_code
		LEFT JOIN 
			price_set AS PS
			ON 
			DC.set_code = PS.set_code
		LEFT JOIN
			price_goods AS PG
			ON
			PG.goods_code = DC.goods_code
		LEFT JOIN
			set_goods AS SG
			ON
			SG.set_code = DC.set_code
		LEFT JOIN
			goods AS GFSG
			ON
			SG.goods_code = GFSG.goods_code
		WHERE
			DC.estimate_code = #{estimateCode}
	</select>
	<select id="getEstimateFormCnt" resultType="int" parameterType="String">
		SELECT 
			COUNT(1) AS CNT
		FROM
			doc_estimate AS DC
		INNER JOIN
			customer AS C
			ON
			DC.customer_id = C.customer_id
		LEFT JOIN
			customer_company AS CC
			ON
			C.customer_id = CC.customer_id
		LEFT JOIN
			goods AS G
			ON 
			DC.goods_code = G.goods_code
		LEFT JOIN 
			price_set AS PS
			ON 
			DC.set_code = PS.set_code
		LEFT JOIN
			price_goods AS PG
			ON
			PG.goods_code = DC.goods_code
		LEFT JOIN
			set_goods AS SG
			ON
			SG.set_code = DC.set_code
		LEFT JOIN
			goods AS GFSG
			ON
			SG.goods_code = GFSG.goods_code
		WHERE
			DC.estimate_code = #{estimateCode}
	</select>
	<resultMap type="Mycompany" id="mycompanyResultMap">
		<result property="mycompanyNumber" column="mycompany_number"/>
		<result property="mycompanyName" column="mycompany_name"/>
		<result property="mycompanyPresident" column="mycompany_president"/>
		<result property="mycompanyAddr" column="mycompany_addr"/>
		<result property="mycompanyTel" column="mycompany_tel"/>
		<result property="mycompanyFax" column="mycompany_fax"/>
	</resultMap>
	<select id="getMycompany" resultMap="mycompanyResultMap">
		SELECT
			  mycompany_number
			, mycompany_name
			, mycompany_president
			, mycompany_addr
			, mycompany_tel
			, mycompany_fax
		FROM
			mycompany
	</select>
	<select id="getStaffNameList" resultType="Staff">
		SELECT
			staff_name AS staffName
		FROM
			staff
	</select>
	<select id="getSetNameList" resultType="PriceSet">
		SELECT
			set_name AS setName
		FROM
			price_set
	</select>
	<select id="getGoodsNameList" resultType="Goods">
		SELECT
			goods_name AS goodsName
		FROM
			goods
	</select>
</mapper>