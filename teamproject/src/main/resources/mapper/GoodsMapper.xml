<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="kr.or.ksmart.mapper.GoodsMapper">

	<resultMap type="Goods" id="goodsResultMap">
		<result property="goodsCode" column="goods_code"/>
		<result property="goodsCategoryCode" column="goods_category_code"/>
		<result property="goodsName" column="goods_name"/>
		<result property="goodsBarcode" column="goods_barcode"/>
		<result property="goodsInputStaffCode" column="goods_input_staff_code"/>
		<result property="goodsInputDate" column="goods_input_date"/>
		<result property="goodsDesc" column="goods_desc"/>
		<result property="originFileName" column="origin_file_name"/>
		<result property="convertFileName" column="convert_file_name"/>
		
		<result property="goodsCategoryName" column="goods_category_name"/>
		<result property="goodsCategoryInputStaffCode" column="goods_category_input_staff_code"/>
		<result property="goodsCategoryInputDate" column="goods_category_input_date"/>
	</resultMap>
	
	<resultMap type="Goods" id="goodsCategoryResultMap">
		<result property="goodsCategoryCode" column="goods_category_code"/>
		<result property="goodsCategoryName" column="goods_category_name"/>
		<result property="goodsCategoryInputStaffCode" column="goods_category_input_staff_code"/>
		<result property="goodsCategoryInputDate" column="goods_category_input_date"/>
	</resultMap>
	
	<!-- goods -->
	
	<insert id="insertGoods" parameterType="Goods">
			INSERT INTO goods
				(	goods_code
				, goods_category_code
				, goods_name
				, goods_barcode
				, goods_input_staff_code
				, goods_input_date
				, goods_desc
				, origin_file_name
				, convert_file_name )
			VALUES 
				( #{goodsCode}
				, #{goodsCategoryCode}
				, #{goodsName}
				, #{goodsBarcode}
				, 'id001'
				, NOW()
				, #{goodsDesc}
				, #{originFileName}
				, #{convertFileName}	);
	</insert>
	
	<select id="getNextGoodsCode" resultType="String">
		SELECT
				CASE
					WHEN MAX(goods_code) LIKE 'goo_%'
					THEN
						CONCAT
							( 'goo_'
							, LPAD(MAX(CAST(SUBSTRING(goods_code, 5) AS DECIMAL))+1,'4','0') )
				ELSE
					ifnull(goods_code, 'goo_0001')
				END AS goodsCode
			FROM
				goods;
	</select>
		
	<select id="getGoodsList" resultMap="goodsResultMap">
		SELECT 
				goods_code
			, g.goods_category_code
			, goods_name
			, goods_barcode
			, goods_input_staff_code
			, goods_input_date
			, goods_desc
			, origin_file_name
			, convert_file_name
			, c.goods_category_name
			, c.goods_category_input_staff_code
			, c.goods_category_input_date
		FROM
			goods AS g
			INNER JOIN goods_category AS c
						ON	g.goods_category_code = c.goods_category_code
		ORDER BY
			goods_code DESC;
	</select>
	
	<select id="getGoods" parameterType="String" resultMap="goodsResultMap">
		SELECT 
				goods_code
			, g.goods_category_code
			, goods_name
			, goods_barcode
			, goods_input_staff_code
			, goods_input_date
			, goods_desc
			, origin_file_name
			, convert_file_name
			, c.goods_category_name
			, c.goods_category_input_staff_code
			, c.goods_category_input_date
		FROM
			goods as g
			INNER JOIN goods_category AS c
						ON	g.goods_category_code = c.goods_category_code
		WHERE
			goods_code = #{goodsCode}
	</select>
	
	<update id="updateGoods" parameterType="Goods">
		UPDATE
				goods
		SET
			  goods_category_code= 			#{goodsCategoryCode}
			, goods_name= 							#{goodsName}
			, goods_barcode= 						#{goodsBarcode}
			, goods_desc= 							#{goodsDesc}
			, goods_img= 								#{goodsImg}
		WHERE
			goods_code= #{goodsCode};
	</update>
	
	<delete id="deleteGoods" parameterType="String">
		DELETE FROM
				goods
		WHERE
				goods_code= #{goodsCode};
	</delete>
	
	<select id="checkOverlap" parameterType="String">
		SELECT 
				goods_code
		FROM
			goods as g
			INNER JOIN goods_category AS c
						ON	g.goods_category_code = c.goods_category_code
		<if test="">
			WHERE
				goods_name = #{goodsName}		
		</if>
		<if test="">
			WHERE
				goods_barcode = #{goodsBarcode}
		</if>
	</select>
	
	<!-- goods END -->
	
</mapper>