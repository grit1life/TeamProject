<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="kr.or.ksmart.mapper.PeriodicInspectionMapper">
  	
  	
  	<resultMap type="kr.or.ksmart.domain.Customer" id="customerResultMap">
		<result property="customerId" column="customer_id"/>
		<result property="customerPw" column="customer_pw"/>
		<result property="customerLevel" column="customer_level"/>
		<result property="customerClass" column="customer_class"/>
		<result property="customerName" column="customer_name"/>
		<result property="customerCall" column="customer_call"/>
		<result property="customerEmail" column="customer_email"/>
		<result property="zipCode" column="zip_code"/>
		<result property="customerAddress" column="customer_address"/>
		<result property="customerAddress2" column="customer_address2"/>		
		<result property="customerCompanyName" column="customer_company_name"/>
		<result property="customerCompanyPresident" column="customer_company_president"/>
		<result property="customerCompanyCall" column="customer_company_call"/>
		<result property="customerCompanyZipCode" column="customer_company_zip_code"/>
		<result property="customerCompanyAddress1" column="customer_company_address1"/>
		<result property="customerCompanyAddress2" column="customer_company_address2"/>
		<result property="customerCompanyEmail" column="customer_company_email"/>
		<result property="customerCompanyHomepage" column="customer_company_homepage"/>
		<result property="inputStaffCode" column="input_staff_code"/>
		<result property="inputStaffName" column="input_staff_name"/>
		<result property="inputDate" column="input_date"/>
		<result property="updateStaffCode" column="update_staff_code"/>
		<result property="updateStaffName" column="update_staff_name"/>
		<result property="updateDate" column="update_date"/>
	</resultMap>
	
  
  	<!--정기점검 코드  -->
  	<select id="getPeriodicInspectionCodeMax" resultType="int">
 		SELECT 
 			IFNULL(MAX(CAST(SUBSTRING(check_code,7) AS DECIMAL)), 0) as maxcol 
		FROM periodic_inspection
		
	
 	</select>
  
  
	<!--정기점검 등록  -->
 	<insert id="pInsert" parameterType="kr.or.ksmart.domain.PeriodicInspection">
 	<selectKey keyProperty="checkCode" resultType="String" order="BEFORE">
 			SELECT 
 				CONCAT('check_', MAX(CAST(SUBSTRING(check_code,7) AS DECIMAL)+1)) AS checkCode
			FROM periodic_inspection
		
	
    </selectKey>
	INSERT INTO periodic_inspection  (  check_code
									   ,contract_code
									   ,branch_code
									   ,staff_id 
									   ,check_date 	
									   ,product_status
									   ,check_contents
											
									   ) VALUES(   #{checkCode}	
												 , #{contractCode}
												 , #{branchCode}
												 , #{staffId}
												 , #{checkDate}
												 , #{productStatus}
												 , #{checkContents}
												
												 );
	
	
	</insert>  
  
  
  
  
  	<!--정기 점검 현황 리스트  -->
	 <select id="getPeriodicInspectionList" parameterType="String" resultType="kr.or.ksmart.domain.PeriodicInspection">
	 SELECT 
		 PI.check_code AS checkCode
		,B.branch_name AS branchName
		,C.customer_name AS customerName
		,C.customer_level AS customerLevel
		,DC.goods_code AS goodsCode
		,G.goods_name AS goodsName
		,PI.product_status AS productStatus
		,S.staff_name	 AS staffName	
		,PI.check_date   AS checkDate
	 FROM
		periodic_inspection AS PI
	 JOIN
		doc_contract AS DC
	 ON
		PI.contract_code = DC.contract_code
	 JOIN
		branch AS B
	 ON
		PI.branch_code = B.branch_code
	 JOIN
		customer AS C
	 ON
		DC.customer_id = C.customer_id
	 JOIN
		staff AS S
	 ON
		PI.staff_id = S.staff_code		
	JOIN
	   goods AS G
	ON
	   G.goods_code = DC.goods_code
		
	GROUP BY 
		PI.check_code;

	</select>
	
	
	<!-- 개인 고객  모달 리스트  -->
	<select id="CustomerList" parameterType="String" resultType="kr.or.ksmart.domain.Customer">
		SELECT 
		 C.customer_id    AS customerId
		,C.customer_name  AS customerName
		,C.customer_level AS customerLevel
		,C.customer_class AS customerClass
		,C.customer_call  AS customerCall
		,C.customer_email AS customerEmail
		,C.zip_code       AS zipCode 
		,C.customer_address AS customerAddress
		,C.customer_address2 AS customerAddress2
		
		FROM
		customer AS C

	</select>
	
   <!--개인고객 검색 모달 리스트 -->
	<select id="CustomerSearchList" parameterType="String"  resultMap="customerResultMap">
				SELECT
					*
				FROM 
				customer 
				WHERE 
				customer_id = #{customerId}
				or customer_name = #{customerName}
				or customer_class =#{customerClass}
				or customer_call =#{customerCall};
				    	
			
	</select>
	  
		
		
  </mapper>