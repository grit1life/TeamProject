<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.ksmart.mapper.StaffMapper">
	<resultMap type="Staff" id="StaffMap">
		<result property="staffCode" column="staff_code"/>
		<result property="staffPw" column="staff_pw"/>
		<result property="staffName" column="staff_name"/>
		<result property="staffBirth" column="staff_birth"/>
		<result property="staffTell" column="staff_tell"/>
		<result property="staffEmail" column="staff_email"/>
		<result property="inputStaffId" column="input_staff_id"/>
		<result property="inputStaffName" column="input_staff_name"/>
		<result property="inputDate" column="input_date"/>
		<result property="staffLevel" column="staff_level"/>
		<result property="staffFromPeriod" column="staff_from_period"/>
		<result property="staffToPeriod" column="staff_to_period"/>
		<result property="branchCode" column="branch_code"/>
		<result property="staffPosition" column="staff_position"/>
		<result property="branchPhone" column="branch_phone"/>
		<result property="branchAddress;" column="branch_address;"/>
		<result property="branchName" column="branch_name"/>
	</resultMap>
	
	<select id="staffList" resultMap="StaffMap" parameterType="kr.or.ksmart.domain.Staff">
		SELECT 
			S.staff_code,B.branch_name,SC.staff_position,S.staff_name
			,S.staff_birth,S.staff_tell,S.staff_email,S.staff_level
		FROM 
			staff AS S
		LEFT JOIN 
			staff_change AS SC
		ON 
			SC.staff_id=S.staff_code
		LEFT JOIN
			branch AS B
		ON 
			SC.branch_code=B.branch_code
	
		WHERE 
			SC.staff_to_period='9999-01-01'
		<if test="branchCode neq null and branchCode neq ''.toString()">
			AND
				SC.branch_code=#{branchCode}
		</if>
		<if test="staffPosition neq null and staffPosition neq ''.toString()">
			AND
				SC.staff_position=#{staffPosition}
		</if>
		<if test="staffName neq null and staffName neq ''.toString()">
			AND
				S.staff_name=#{staffName}
		</if>
		<if test="staffBirth neq null and staffBirth neq ''.toString()">
			AND
				S.staff_birth=#{staffBirth}
		</if>
		<if test="staffTell neq null and staffTell neq ''.toString()">
			AND
				S.staff_tell=#{staffTell}
		</if>
		<if test="staffEmail neq null and staffEmail neq ''.toString()">
			AND
				S.staff_email=#{staffEmail}
		</if>
		<if test="staffLevel neq null and staffLevel neq ''.toString()">
			AND
				S.staff_level=#{staffLevel}
		</if>

	</select>
	
	
	<select id="staffLogin" resultMap="StaffMap" parameterType="String">
		SELECT 
			staff_pw,
			B.branch_name,
			S.staff_name,
			SC.staff_level
		FROM 
			staff AS S
		LEFT JOIN 
			staff_change AS SC
		ON 
			SC.staff_id=S.staff_code
		AND
			S.staff_code=#{staffId}
		LEFT JOIN
			branch AS B
		ON 
			SC.branch_code=B.branch_code
		WHERE 
			SC.staff_to_period &gt;= NOW();
	</select>
	
	<select id="staffDetails" resultMap="StaffMap" parameterType="String">
		SELECT
			S.*,SC.staff_position
		FROM
			staff AS S
		LEFT JOIN 
			staff_change AS SC
		ON 
			S.staff_code=SC.staff_id
		AND 
			SC.staff_to_period &gt;= NOW()
		WHERE 
			S.staff_code=#{staffCode};
	</select>
	<select id="staffTransferList" resultMap="StaffMap" parameterType="String">
		SELECT 
			SC.staff_from_period,SC.staff_to_period,B.branch_name,SC.staff_position,SC.staff_level
			,S.staff_name,SC.input_date,S.staff_code
		FROM
			staff_change AS SC
		INNER JOIN
			branch AS B
		ON
			SC.branch_code=B.branch_code
		AND 
			SC.staff_id=#{staffCode}
		INNER JOIN 
			staff AS S
		ON 
			SC.input_staff_id=S.staff_code;
	</select>
	
	<update id="staffDUpdate" parameterType="kr.or.ksmart.domain.Staff">
		UPDATE 
			staff
		SET
			staff_pw=#{staffPw},
			staff_name=#{staffName},
			staff_birth=#{staffBirth},
			staff_tell=#{staffTell},
			staff_email=#{staffEmail},
			input_staff_id=#{inputStaffId},
			input_date=NOW()
		WHERE 
			staff_code=#{staffCode};
	
	</update>
</mapper>